{"ast":null,"code":"import { createClient } from 'contentful';\nconst client = createClient({\n  space: process.env.CONTENTFUL_SPACE_ID,\n  accessToken: process.env.CONTENTFUL_ACCESS_TOKEN\n});\nconst previewClient = createClient({\n  space: process.env.CONTENTFUL_SPACE_ID,\n  accessToken: process.env.CONTENTFUL_PREVIEW_ACCESS_TOKEN,\n  host: 'preview.contentful.com'\n});\n\nconst getClient = preview => preview ? previewClient : client;\n\nfunction parseAuthor({\n  fields\n}) {\n  return {\n    name: fields.name,\n    picture: fields.picture.fields.file\n  };\n}\n\nfunction parsePost({\n  fields\n}) {\n  return {\n    title: fields.title,\n    slug: fields.slug,\n    date: fields.date,\n    content: fields.content,\n    excerpt: fields.excerpt,\n    coverImage: fields.coverImage.fields.file,\n    author: parseAuthor(fields.author)\n  };\n}\n\nfunction parsePostEntries(entries, cb = parsePost) {\n  var _entries$items;\n\n  return entries === null || entries === void 0 ? void 0 : (_entries$items = entries.items) === null || _entries$items === void 0 ? void 0 : _entries$items.map(cb);\n}\n\nexport async function getPreviewPostBySlug(slug) {\n  const entries = await getClient(true).getEntries({\n    content_type: 'post',\n    limit: 1,\n    'fields.slug[in]': slug\n  });\n  return parsePostEntries(entries)[0];\n}\nexport async function getAllPostsWithSlug() {\n  const entries = await client.getEntries({\n    content_type: 'post',\n    select: 'fields.slug'\n  });\n  return parsePostEntries(entries, post => post.fields);\n}\nexport async function getAllPostsForHome(preview) {\n  const entries = await getClient(preview).getEntries({\n    content_type: 'post',\n    order: '-fields.date'\n  });\n  return parsePostEntries(entries);\n}\nexport async function getPostAndMorePosts(slug, preview) {\n  const entry = await getClient(preview).getEntries({\n    content_type: 'post',\n    limit: 1,\n    'fields.slug[in]': slug\n  });\n  const entries = await getClient(preview).getEntries({\n    content_type: 'post',\n    limit: 2,\n    order: '-fields.date',\n    'fields.slug[nin]': slug\n  });\n  return {\n    post: parsePostEntries(entry)[0],\n    morePosts: parsePostEntries(entries)\n  };\n}","map":null,"metadata":{},"sourceType":"module"}